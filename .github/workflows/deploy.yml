name: CI and Deploy Lambdas

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ENVIRONMENT: dev
      APPLICATION_NAME: my-batch-lambdas

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Run linting
      - name: Run lint
        run: npm run lint

      # Step 5: Run tests
      - name: Run tests
        run: npm run test

      # Step 6: Build the project
      - name: Build project
        run: npm run build

      # Step 7: Archive build output
      - name: Archive build artifacts
        run: zip -r lambda-build.zip dist
        # Upload artifacts for later use
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: lambda-build
          path: lambda-build.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    env:
      ENVIRONMENT: dev
      APPLICATION_NAME: my-batch-lambdas
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ap-south-1

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Download the artifact from the build job
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: lambda-build

      # Step 3: Extract the artifact (optional)
      - name: Extract artifact
        run: unzip lambda-build.zip -d dist

      # Step 4: Deploy Lambda using CloudFormation (updated AWS deployment)
      - name: Deploy Lambda functions using CloudFormation
        run: |
          # Set up variables
          LAMBDA_CODE_ZIP_FILE_PATH="dist/lambdas.zip"
          PIPELINE_STACK_NAME="${{ env.APPLICATION_NAME }}-${{ env.ENVIRONMENT }}-pipeline-stack"
          
          # Upload the artifact to S3 (if needed)
          aws s3 cp $LAMBDA_CODE_ZIP_FILE_PATH s3://my-lambda-bucket/${{ env.APPLICATION_NAME }}-${{ env.ENVIRONMENT }}/lambda.zip

          # Deploy the CloudFormation stack with AWS CLI
          aws cloudformation deploy \
            --stack-name $PIPELINE_STACK_NAME \
            --template-file cloudformation.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
            "ZippedLambdaS3Key=${{ env.APPLICATION_NAME }}-${{ env.ENVIRONMENT }}/lambda.zip" \
            "ArtifactsBucketName=my-lambda-bucket"
