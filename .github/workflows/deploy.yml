name: CI and Deploy Lambdas

on:
  push:
    branches:
      - staging

jobs:
  deployLambdas:
    runs-on: ubuntu-latest

    env:
      APPLICATION_NAME: my-batch-lambdas
      AWS_REGION: ap-south-1
      AWS_ACCESS_KEY_ID: "YOUR_HARD_CODED_ACCESS_KEY"
      AWS_SECRET_ACCESS_KEY: "YOUR_HARD_CODED_SECRET_KEY"
      JFROG_PASSWORD: ""
      JFROG_API_KEY: ""

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set environment variables for staging
        run: |
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "JFROG_PASSWORD=${{ secrets.JFROG_PASSWORD }}" >> $GITHUB_ENV
          echo "JFROG_API_KEY=${{ secrets.JFROG_API_KEY }}" >> $GITHUB_ENV

      - name: Debug AWS Credentials
        run: |
          echo "Environment: ${{ env.ENVIRONMENT }}"
          echo "AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}"

      # Step 3: Build the project
      - name: Build
        run: |
          npm install && \
          npm run lint && \
          npm run test && \
          npm run build

      # Step 4: Deploy using deploy-stage-2.sh script
      - name: Deploy
        run: |
          chmod +x .code-pipeline/deploy-stage-2.sh && \
          bash .code-pipeline/deploy-stage-2.sh --environment ${{ env.ENVIRONMENT }} --application-name ${{ env.APPLICATION_NAME }} --jfrog-password ${{ env.JFROG_PASSWORD }} -jfrog-api-key ${{ env.JFROG_API_KEY }} } --debug true
