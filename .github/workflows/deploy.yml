name: CI and Deploy Lambdas

on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - test

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ENVIRONMENT: dev
      APPLICATION_NAME: my-batch-lambdas

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment (from file1)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Step 3: Install dependencies (from file1)
      - name: Install dependencies
        run: npm install

      # Step 4: Run linting (from file1)
      - name: Run lint
        run: npm run lint

      # Step 5: Run tests (from file1)
      - name: Run tests
        run: npm run test

      # Step 6: Build the project (from file1)
      - name: Build project
        run: npm run build

       # Step 7: Archive the entire repository
      - name: Archive entire repository
        run: zip -r lambda-build.zip .  # Zips everything in the current directory (root of the repo)

      # Step 8: Upload build artifacts (from file1)
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lambda-build
          path: lambda-build.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    env:
      ENVIRONMENT: dev
      APPLICATION_NAME: my-batch-lambdas
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ap-south-1

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Download the artifact from the build job (from file1 and file2)
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: lambda-build

      # Step 4: Unzip the downloaded artifact
      - name: Unzip build artifact
        run: unzip lambda-build.zip -d ./lambdabuild

      # Step 5: Make the deploy script executable (from file2)
      - name: Make deploy script executable
        run: chmod +x .code-pipeline/deploy-stage-2.sh

      # Step 6: Deploy using deploy-stage-2.sh script (from file2)
      - name: Deploy Lambdas
        run: bash .code-pipeline/deploy-stage-2.sh --environment ${{ env.ENVIRONMENT }} --application-name ${{ env.APPLICATION_NAME }} --debug true
